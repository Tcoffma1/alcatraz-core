buildscript {
    repositories {
        jcenter()
        maven { // Forge Gradle
            url = "http://files.minecraftforge.net/maven"
        }
        maven { // Curse Forge
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.1.0'
    }
}

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'

ext.priv = parseConfig(file('../../jar-signing/private.properties'))

version = "${mod_version}"
group = "com.alcatrazescapee.alcatrazcore" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "alcatrazcore"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

    mappings = "${mcp_mappings}"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    replace 'GRADLE:VERSION', "${mod_version}"
    replaceIn "AlcatrazCore.java"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

curseforge {
    if (priv == null) {
        return
    }
    project {
        apiKey = "${priv.curseforge_api_token}"
        id = "304493"
        changelog = file("changelog.txt")
        releaseType = "release"

        addGameVersion("${mc_version}")
        relations {
        }

        afterEvaluate {
            gameVersionStrings.remove('Java 9')
        }
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    keyStore = "${priv.keyStore}"
    alias = "${priv.keyStoreAlias}"
    storePass = "${priv.keyStorePass}"
    keyPass = "${priv.keyStoreKeyPass}"

    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build.dependsOn signJar

def static parseConfig(File config) {
    if (config.exists()) {
        config.withReader {
            def prop = new Properties()
            prop.load(it)
            return (new ConfigSlurper().parse(prop))
        }
    } else {
        return null
    }
}
